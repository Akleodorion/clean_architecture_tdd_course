// Mocks generated by Mockito 5.4.2 from annotations
// in clean_architecture_tdd_course/test/features/number_trivia/data/repositories/number_trivia_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:clean_architecture_tdd_course/core/network/network_info.dart'
    as _i2;
import 'package:clean_architecture_tdd_course/features/number_trivia/data/datasources/number_trivia_local_data_source.dart'
    as _i4;
import 'package:clean_architecture_tdd_course/features/number_trivia/data/datasources/number_trivia_remote_data_source.dart'
    as _i6;
import 'package:clean_architecture_tdd_course/features/number_trivia/data/models/number_trivia_model.dart'
    as _i5;
import 'package:clean_architecture_tdd_course/features/number_trivia/domain/entities/number_trivia.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i2.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}

/// A class which mocks [NumberTriviaLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockNumberTriviaLocalDataSource extends _i1.Mock
    implements _i4.NumberTriviaLocalDataSource {
  MockNumberTriviaLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void>? cacheNumberTrivia(
          _i5.NumberTriviaModel? numberTriviaModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheNumberTrivia,
          [numberTriviaModel],
        ),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>?);
}

/// A class which mocks [NumberTriviaRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockNumberTriviaRemoteDataSource extends _i1.Mock
    implements _i6.NumberTriviaRemoteDataSource {
  MockNumberTriviaRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i7.NumberTrivia>? getConcreteNumberTrivia(int? number) =>
      (super.noSuchMethod(Invocation.method(
        #getConcreteNumberTrivia,
        [number],
      )) as _i3.Future<_i7.NumberTrivia>?);
}
